$date
	Fri Mar 21 22:22:05 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_registers $end
$var wire 32 ! readData2 [31:0] $end
$var wire 32 " readData1 [31:0] $end
$var reg 1 # clk $end
$var reg 5 $ readReg1 [4:0] $end
$var reg 5 % readReg2 [4:0] $end
$var reg 1 & regWrite $end
$var reg 1 ' resetn $end
$var reg 32 ( writeData [31:0] $end
$var reg 5 ) writeReg [4:0] $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 5 * readReg1 [4:0] $end
$var wire 5 + readReg2 [4:0] $end
$var wire 1 & regWrite $end
$var wire 1 ' resetn $end
$var wire 32 , writeData [31:0] $end
$var wire 5 - writeReg [4:0] $end
$var reg 32 . readData1 [31:0] $end
$var reg 32 / readData2 [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
0'
x&
bx %
bx $
0#
bx "
bx !
$end
#5
b100000 0
1#
#10
0#
1'
#15
1#
b11011110101011011011111011101111 (
b11011110101011011011111011101111 ,
1&
b1 )
b1 -
b1 %
b1 +
b0 $
b0 *
#20
0#
