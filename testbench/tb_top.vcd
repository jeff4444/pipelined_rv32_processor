$date
	Fri Mar 21 09:15:36 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_top $end
$var reg 1 ! clk $end
$var reg 1 " rstn $end
$scope module DUT $end
$var wire 1 ! clk $end
$var wire 5 # rd_mem [4:0] $end
$var wire 5 $ rd_wb [4:0] $end
$var wire 1 % regWriteMem $end
$var wire 1 & regWriteWb $end
$var wire 1 " resetn $end
$var wire 5 ' rs1_ex [4:0] $end
$var wire 5 ( rs2_ex [4:0] $end
$var wire 1 ) selectNOP $end
$var wire 5 * rs2_id [4:0] $end
$var wire 5 + rs1_id [4:0] $end
$var wire 1 , regWrite $end
$var wire 5 - rd_ex [4:0] $end
$var wire 1 . pcWrite $end
$var wire 1 / pcSrc $end
$var wire 1 0 memWrite $end
$var wire 1 1 memToReg $end
$var wire 1 2 memReadEx $end
$var wire 1 3 memRead $end
$var wire 32 4 instruction [31:0] $end
$var wire 1 5 ifIdWrite $end
$var wire 2 6 forwardB [1:0] $end
$var wire 2 7 forwardA [1:0] $end
$var wire 1 8 branch $end
$var wire 1 9 IFflush $end
$var wire 1 : ALUSrc $end
$var wire 2 ; ALUOpSel [1:0] $end
$var wire 4 < ALUOp [3:0] $end
$scope module alu_ctrl $end
$var wire 32 = instruction [31:0] $end
$var wire 2 > alu_op_sel [1:0] $end
$var wire 4 ? alu_op [3:0] $end
$upscope $end
$scope module ctrl $end
$var wire 1 : aluSrc $end
$var wire 1 8 branch $end
$var wire 1 3 memRead $end
$var wire 1 1 memToReg $end
$var wire 1 0 memWrite $end
$var wire 7 @ opcode [6:0] $end
$var wire 1 , regWrite $end
$var wire 1 A temp1 $end
$var wire 1 B temp2 $end
$var wire 2 C aluOp [1:0] $end
$upscope $end
$scope module dp $end
$var wire 4 D ALUOp [3:0] $end
$var wire 1 : ALUSrc $end
$var wire 1 8 branch $end
$var wire 1 ! clk $end
$var wire 32 E instruction [31:0] $end
$var wire 1 3 memRead $end
$var wire 1 2 memReadExOut $end
$var wire 1 1 memToReg $end
$var wire 1 0 memWrite $end
$var wire 1 F pcSrc $end
$var wire 1 / pcsrc $end
$var wire 5 G rdEx [4:0] $end
$var wire 1 , regWrite $end
$var wire 1 " resetn $end
$var wire 5 H rs1Id [4:0] $end
$var wire 5 I rs2Id [4:0] $end
$var wire 32 J writeData [31:0] $end
$var wire 2 K selOp2 [1:0] $end
$var wire 2 L selOp1 [1:0] $end
$var wire 5 M rs2_id [4:0] $end
$var wire 5 N rs2_ex [4:0] $end
$var wire 32 O rs2_data_id [31:0] $end
$var wire 32 P rs2_data_ex [31:0] $end
$var wire 5 Q rs1_id [4:0] $end
$var wire 5 R rs1_ex [4:0] $end
$var wire 32 S rs1_data_id [31:0] $end
$var wire 32 T rs1_data_ex [31:0] $end
$var wire 1 U registersIsEqual $end
$var wire 1 V regWriteWb $end
$var wire 1 W regWriteMem $end
$var wire 1 X regWriteEx $end
$var wire 32 Y readDataWb [31:0] $end
$var wire 32 Z readData [31:0] $end
$var wire 5 [ rd_wb [4:0] $end
$var wire 5 \ rd_mem [4:0] $end
$var wire 5 ] rd_id [4:0] $end
$var wire 5 ^ rd_ex [4:0] $end
$var wire 32 _ pc_plus_imm [31:0] $end
$var wire 32 ` pc_if [31:0] $end
$var wire 32 a pc_id [31:0] $end
$var wire 1 . pcWrite $end
$var wire 1 b memWriteMem $end
$var wire 1 c memWriteEx $end
$var wire 1 d memToRegWb $end
$var wire 1 e memToRegMem $end
$var wire 1 f memToRegEx $end
$var wire 1 g memReadMem $end
$var wire 1 h memReadEx $end
$var wire 32 i instruction_if [31:0] $end
$var wire 32 j instruction_id [31:0] $end
$var wire 32 k imm_id [31:0] $end
$var wire 32 l imm_ex [31:0] $end
$var wire 1 5 ifIdWrite $end
$var wire 32 m aluResultWb [31:0] $end
$var wire 32 n aluResultMem [31:0] $end
$var wire 32 o aluResult [31:0] $end
$var wire 32 p aluOperand2Mem [31:0] $end
$var wire 32 q aluOperand2 [31:0] $end
$var wire 1 r ALUSrcEx $end
$var wire 4 s ALUOpEx [3:0] $end
$scope module ex1 $end
$var wire 32 t aluOperand2 [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " resetn $end
$var wire 32 u wbResult [31:0] $end
$var wire 2 v selOp2 [1:0] $end
$var wire 2 w selOp1 [1:0] $end
$var wire 32 x rs2Data [31:0] $end
$var wire 32 y rs1Data [31:0] $end
$var wire 32 z immORrs2 [31:0] $end
$var wire 32 { imm [31:0] $end
$var wire 32 | aluResultWb [31:0] $end
$var wire 32 } aluResult [31:0] $end
$var wire 32 ~ aluOp2 [31:0] $end
$var wire 32 !" aluOp1 [31:0] $end
$var wire 1 r ALUSrc $end
$var wire 4 "" ALUOp [3:0] $end
$scope module alu1 $end
$var wire 32 #" op2 [31:0] $end
$var wire 32 $" op1 [31:0] $end
$var wire 4 %" alu_op [3:0] $end
$var reg 32 &" result [31:0] $end
$upscope $end
$scope module mux1 $end
$var wire 32 '" op4 [31:0] $end
$var wire 2 (" sel [1:0] $end
$var wire 32 )" op3 [31:0] $end
$var wire 32 *" op2 [31:0] $end
$var wire 32 +" op1 [31:0] $end
$var reg 32 ," out [31:0] $end
$upscope $end
$scope module mux2 $end
$var wire 1 r sel $end
$var wire 32 -" out [31:0] $end
$var wire 32 ." op2 [31:0] $end
$var wire 32 /" op1 [31:0] $end
$upscope $end
$scope module mux3 $end
$var wire 32 0" op1 [31:0] $end
$var wire 32 1" op4 [31:0] $end
$var wire 2 2" sel [1:0] $end
$var wire 32 3" op3 [31:0] $end
$var wire 32 4" op2 [31:0] $end
$var reg 32 5" out [31:0] $end
$upscope $end
$upscope $end
$scope module ex_mem1 $end
$var wire 32 6" aluOperand2 [31:0] $end
$var wire 32 7" aluResult [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " resetn $end
$var wire 1 X regWrite $end
$var wire 5 8" rd [4:0] $end
$var wire 1 c memWrite $end
$var wire 1 f memToReg $end
$var wire 1 h memRead $end
$var reg 32 9" aluOperand2Out [31:0] $end
$var reg 32 :" aluResultOut [31:0] $end
$var reg 1 g memReadOut $end
$var reg 1 e memToRegOut $end
$var reg 1 b memWriteOut $end
$var reg 5 ;" rdOut [4:0] $end
$var reg 1 W regWriteOut $end
$upscope $end
$scope module id1 $end
$var wire 1 ! clk $end
$var wire 32 <" imm [31:0] $end
$var wire 1 , regWrite $end
$var wire 1 " resetn $end
$var wire 5 =" writeReg [4:0] $end
$var wire 32 >" rs2Data [31:0] $end
$var wire 5 ?" rs2 [4:0] $end
$var wire 32 @" rs1Data [31:0] $end
$var wire 5 A" rs1 [4:0] $end
$var wire 1 U registersIsEqual $end
$var wire 32 B" regWriteData [31:0] $end
$var wire 5 C" rd [4:0] $end
$var wire 32 D" pc_plus_imm [31:0] $end
$var wire 32 E" pc [31:0] $end
$var wire 32 F" instruction [31:0] $end
$var wire 32 G" immediate [31:0] $end
$scope module imm1 $end
$var wire 32 H" instruction [31:0] $end
$var wire 32 I" immediate [31:0] $end
$var reg 12 J" temp_imm [11:0] $end
$upscope $end
$scope module regFile1 $end
$var wire 1 ! clk $end
$var wire 5 K" readReg1 [4:0] $end
$var wire 5 L" readReg2 [4:0] $end
$var wire 32 M" reg0 [31:0] $end
$var wire 32 N" reg1 [31:0] $end
$var wire 32 O" reg2 [31:0] $end
$var wire 32 P" reg3 [31:0] $end
$var wire 32 Q" reg4 [31:0] $end
$var wire 32 R" reg5 [31:0] $end
$var wire 32 S" reg6 [31:0] $end
$var wire 32 T" reg7 [31:0] $end
$var wire 1 , regWrite $end
$var wire 1 " resetn $end
$var wire 5 U" writeReg [4:0] $end
$var wire 32 V" writeData [31:0] $end
$var reg 32 W" readData1 [31:0] $end
$var reg 32 X" readData2 [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 Y" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module id_ex1 $end
$var wire 4 Z" ALUOp [3:0] $end
$var wire 1 : ALUSrc $end
$var wire 1 ! clk $end
$var wire 32 [" imm [31:0] $end
$var wire 1 3 memRead $end
$var wire 1 1 memToReg $end
$var wire 1 0 memWrite $end
$var wire 5 \" rd [4:0] $end
$var wire 1 , regWrite $end
$var wire 1 " resetn $end
$var wire 5 ]" rs1 [4:0] $end
$var wire 32 ^" rs1Data [31:0] $end
$var wire 5 _" rs2 [4:0] $end
$var wire 32 `" rs2Data [31:0] $end
$var reg 4 a" ALUOpOut [3:0] $end
$var reg 1 r ALUSrcOut $end
$var reg 32 b" immOut [31:0] $end
$var reg 1 h memReadOut $end
$var reg 1 f memToRegOut $end
$var reg 1 c memWriteOut $end
$var reg 5 c" rdOut [4:0] $end
$var reg 1 X regWriteOut $end
$var reg 32 d" rs1DataOut [31:0] $end
$var reg 5 e" rs1Out [4:0] $end
$var reg 32 f" rs2DataOut [31:0] $end
$var reg 5 g" rs2Out [4:0] $end
$upscope $end
$scope module if1 $end
$var wire 1 ! clk $end
$var wire 1 F pcSrc $end
$var wire 32 h" pc_out [31:0] $end
$var wire 32 i" pc_plus_imm [31:0] $end
$var wire 1 " resetn $end
$var wire 32 j" pc_plus_4 [31:0] $end
$var wire 32 k" pc_out_reg [31:0] $end
$var wire 1 . pcWrite $end
$var wire 32 l" pc [31:0] $end
$var wire 32 m" instruction_out [31:0] $end
$scope module im $end
$var wire 1 ! clk $end
$var wire 1 " resetn $end
$var wire 32 n" instruction [31:0] $end
$var wire 32 o" address [31:0] $end
$scope begin $ivl_for_loop2 $end
$var integer 32 p" i [31:0] $end
$upscope $end
$upscope $end
$scope module mux $end
$var wire 32 q" op1 [31:0] $end
$var wire 32 r" op2 [31:0] $end
$var wire 1 F sel $end
$var wire 32 s" out [31:0] $end
$upscope $end
$scope module pc_inst $end
$var wire 1 ! clk $end
$var wire 32 t" pc_next [31:0] $end
$var wire 1 " resetn $end
$var wire 1 . pcWrite $end
$var reg 32 u" pc_prev [31:0] $end
$upscope $end
$upscope $end
$scope module if_id1 $end
$var wire 1 v" IFflush $end
$var wire 1 ! clk $end
$var wire 32 w" instruction [31:0] $end
$var wire 32 x" pc [31:0] $end
$var wire 1 " resetn $end
$var wire 1 5 ifIdWrite $end
$var reg 32 y" instruction_out [31:0] $end
$var reg 32 z" pc_out [31:0] $end
$upscope $end
$scope module mem1 $end
$var wire 32 {" aluOp2 [31:0] $end
$var wire 32 |" aluResult [31:0] $end
$var wire 1 ! clk $end
$var wire 1 g memRead $end
$var wire 1 b memWrite $end
$var wire 1 " resetn $end
$var wire 32 }" readData [31:0] $end
$scope module dm1 $end
$var wire 32 ~" addr [31:0] $end
$var wire 1 ! clk $end
$var wire 1 g readEnable $end
$var wire 1 " resetn $end
$var wire 32 !# writeData [31:0] $end
$var wire 1 b writeEnable $end
$var reg 32 "# readData [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 ## i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem_wb1 $end
$var wire 32 $# aluResult [31:0] $end
$var wire 1 ! clk $end
$var wire 1 e memToReg $end
$var wire 5 %# rd [4:0] $end
$var wire 32 &# readData [31:0] $end
$var wire 1 W regWrite $end
$var wire 1 " resetn $end
$var reg 32 '# aluResultOut [31:0] $end
$var reg 1 d memToRegOut $end
$var reg 5 (# rdOut [4:0] $end
$var reg 32 )# readDataOut [31:0] $end
$var reg 1 V regWriteOut $end
$upscope $end
$scope module wb1 $end
$var wire 32 *# aluResult [31:0] $end
$var wire 1 ! clk $end
$var wire 1 d memToReg $end
$var wire 32 +# readData [31:0] $end
$var wire 1 " resetn $end
$var wire 32 ,# writeData [31:0] $end
$scope module mux1 $end
$var wire 32 -# op1 [31:0] $end
$var wire 32 .# op2 [31:0] $end
$var wire 1 d sel $end
$var wire 32 /# out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module fu $end
$var wire 5 0# rd_mem [4:0] $end
$var wire 5 1# rd_wb [4:0] $end
$var wire 1 % regWriteMem $end
$var wire 1 & regWriteWb $end
$var wire 5 2# rs1_ex [4:0] $end
$var wire 5 3# rs2_ex [4:0] $end
$var reg 2 4# forwardA [1:0] $end
$var reg 2 5# forwardB [1:0] $end
$upscope $end
$scope module hdu $end
$var wire 1 2 memReadEx $end
$var wire 1 / pcSrc $end
$var wire 5 6# rd_ex [4:0] $end
$var wire 5 7# rs1_id [4:0] $end
$var wire 5 8# rs2_id [4:0] $end
$var reg 1 9 IFflush $end
$var reg 1 5 ifIdWrite $end
$var reg 1 . pcWrite $end
$var reg 1 ) selectNOP $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 8#
bx 7#
bx 6#
b0 5#
b0 4#
bz 3#
bz 2#
bz 1#
bz 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
zv"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
bx o"
bx n"
bx m"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
b0xxx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
b0 2"
b0 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
b0 ("
b0 '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
b0 w
b0 v
bx u
bx t
bx s
xr
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
xh
xg
xf
xe
xd
xc
xb
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
xX
xW
xV
xU
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
b0 L
b0 K
bx J
bx I
bx H
bx G
xF
bx E
b0xxx D
bx C
xB
xA
bx @
b0xxx ?
bx >
bx =
b0xxx <
bx ;
x:
x9
x8
b0 7
b0 6
x5
bx 4
x3
x2
x1
x0
x/
x.
bx -
x,
bx +
bx *
x)
bz (
bz '
z&
z%
bz $
bz #
0"
0!
$end
#5000
0/
0F
0B
1:
1,
00
b100 l"
b100 s"
b100 t"
b10 <
b10 ?
b10 D
b10 Z"
08
0A
11
13
b0 _
b0 D"
b0 i"
b0 r"
b0 ;
b0 >
b0 C
b0 k
b0 <"
b0 ["
b0 G"
b0 I"
b0 q
b0 t
b0 6"
b0 ~
b0 #"
b0 5"
b0 L"
b0 K"
1U
b0 ]
b0 C"
b0 \"
b0 *
b0 I
b0 8#
b0 M
b0 ?"
b0 _"
b0 +
b0 H
b0 7#
b0 Q
b0 A"
b0 ]"
b0 @
b0 J"
b0 o
b0 }
b0 &"
b0 7"
b0 $#
09
0)
15
1.
b0 z
b0 -"
b0 0"
b0 !"
b0 $"
b0 ,"
b0 J
b0 u
b0 *"
b0 4"
b0 B"
b0 V"
b0 ,#
b0 /#
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b10000010000011 i
b10000010000011 m"
b10000010000011 n"
b10000010000011 w"
b100 j"
b100 q"
b0 `
b0 h"
b0 x"
b0 k"
b0 o"
b0 u"
b0 4
b0 =
b0 E
b0 j
b0 F"
b0 H"
b0 y"
b0 a
b0 E"
b0 z"
0X
0f
0c
02
0h
b0 s
b0 ""
b0 %"
b0 a"
0r
b0 -
b0 G
b0 6#
b0 ^
b0 8"
b0 c"
b0 N
b0 g"
b0 R
b0 e"
b0 P
b0 x
b0 ."
b0 f"
b0 T
b0 y
b0 +"
b0 d"
b0 l
b0 {
b0 /"
b0 b"
0W
0e
0b
0g
b0 p
b0 9"
b0 {"
b0 !#
b0 \
b0 ;"
b0 %#
b0 n
b0 :"
b0 |"
b0 ~"
0V
0d
b0 [
b0 ="
b0 U"
b0 (#
b0 m
b0 |
b0 )"
b0 3"
b0 '#
b0 *#
b0 .#
b0 Y
b0 )#
b0 +#
b0 -#
b10000000000 ##
b100000 Y"
b10000000000 p"
1!
#10000
b0 Z
b0 }"
b0 "#
b0 &#
b0 O
b0 >"
b0 X"
b0 `"
b0 S
b0 @"
b0 W"
b0 ^"
0!
1"
#15000
b1 ]
b1 C"
b1 \"
b11 @
b1000 l"
b1000 s"
b1000 t"
1X
1f
12
1h
b10 s
b10 ""
b10 %"
b10 a"
1r
b10000010000011 4
b10000010000011 =
b10000010000011 E
b10000010000011 j
b10000010000011 F"
b10000010000011 H"
b10000010000011 y"
b100001000000100110011 i
b100001000000100110011 m"
b100001000000100110011 n"
b100001000000100110011 w"
b1000 j"
b1000 q"
b100 `
b100 h"
b100 x"
b100 k"
b100 o"
b100 u"
1!
#20000
0!
#25000
0B
0:
00
01
03
1)
05
0.
b10 ;
b10 >
b10 C
b1100 l"
b1100 s"
b1100 t"
b1 L"
b1 K"
1U
b10 ]
b10 C"
b10 \"
b1 *
b1 I
b1 8#
b1 M
b1 ?"
b1 _"
b1 +
b1 H
b1 7#
b1 Q
b1 A"
b1 ]"
b110011 @
b1000001000000110110011 i
b1000001000000110110011 m"
b1000001000000110110011 n"
b1000001000000110110011 w"
b1100 j"
b1100 q"
b1000 `
b1000 h"
b1000 x"
b1000 k"
b1000 o"
b1000 u"
b100001000000100110011 4
b100001000000100110011 =
b100001000000100110011 E
b100001000000100110011 j
b100001000000100110011 F"
b100001000000100110011 H"
b100001000000100110011 y"
b100 _
b100 D"
b100 i"
b100 r"
b100 a
b100 E"
b100 z"
b1 -
b1 G
b1 6#
b1 ^
b1 8"
b1 c"
1W
1e
1g
1!
#30000
b101 Z
b101 }"
b101 "#
b101 &#
0!
#35000
0)
15
1.
1V
1d
b101 Y
b101 )#
b101 +#
b101 -#
b1 \
b1 ;"
b1 %#
0f
02
0h
0r
b10 -
b10 G
b10 6#
b10 ^
b10 8"
b10 c"
b1 N
b1 g"
b1 R
b1 e"
1!
#40000
0!
#45000
b10000 l"
b10000 s"
b10000 t"
b10 L"
0U
b11 ]
b11 C"
b11 \"
b10 *
b10 I
b10 8#
b10 M
b10 ?"
b10 _"
b1000000000100011000001000110011 i
b1000000000100011000001000110011 m"
b1000000000100011000001000110011 n"
b1000000000100011000001000110011 w"
b10000 j"
b10000 q"
b1100 `
b1100 h"
b1100 x"
b1100 k"
b1100 o"
b1100 u"
b1000001000000110110011 4
b1000001000000110110011 =
b1000001000000110110011 E
b1000001000000110110011 j
b1000001000000110110011 F"
b1000001000000110110011 H"
b1000001000000110110011 y"
b1000 _
b1000 D"
b1000 i"
b1000 r"
b1000 a
b1000 E"
b1000 z"
0e
0g
b10 \
b10 ;"
b10 %#
b1 [
b1 ="
b1 U"
b1 (#
1!
#50000
b0 Z
b0 }"
b0 "#
b0 &#
0!
#55000
b110 <
b110 ?
b110 D
b110 Z"
b1 L"
b11 K"
b100 ]
b100 C"
b100 \"
b1 *
b1 I
b1 8#
b1 M
b1 ?"
b1 _"
b11 +
b11 H
b11 7#
b11 Q
b11 A"
b11 ]"
b10100 l"
b10100 s"
b10100 t"
0d
b10 [
b10 ="
b10 U"
b10 (#
b0 Y
b0 )#
b0 +#
b0 -#
b11 -
b11 G
b11 6#
b11 ^
b11 8"
b11 c"
b10 N
b10 g"
b1000000000100011000001000110011 4
b1000000000100011000001000110011 =
b1000000000100011000001000110011 E
b1000000000100011000001000110011 j
b1000000000100011000001000110011 F"
b1000000000100011000001000110011 H"
b1000000000100011000001000110011 y"
b1100 _
b1100 D"
b1100 i"
b1100 r"
b1100 a
b1100 E"
b1100 z"
b100100111001010110011 i
b100100111001010110011 m"
b100100111001010110011 n"
b100100111001010110011 w"
b10100 j"
b10100 q"
b10000 `
b10000 h"
b10000 x"
b10000 k"
b10000 o"
b10000 u"
1!
#60000
0!
#65000
b0 <
b0 ?
b0 D
b0 Z"
b11000 l"
b11000 s"
b11000 t"
b100 K"
b101 ]
b101 C"
b101 \"
b100 +
b100 H
b100 7#
b100 Q
b100 A"
b100 ]"
b100011110001100110011 i
b100011110001100110011 m"
b100011110001100110011 n"
b100011110001100110011 w"
b11000 j"
b11000 q"
b10100 `
b10100 h"
b10100 x"
b10100 k"
b10100 o"
b10100 u"
b100100111001010110011 4
b100100111001010110011 =
b100100111001010110011 E
b100100111001010110011 j
b100100111001010110011 F"
b100100111001010110011 H"
b100100111001010110011 y"
b10000 _
b10000 D"
b10000 i"
b10000 r"
b10000 a
b10000 E"
b10000 z"
b110 s
b110 ""
b110 %"
b110 a"
b100 -
b100 G
b100 6#
b100 ^
b100 8"
b100 c"
b1 N
b1 g"
b11 R
b11 e"
b11 \
b11 ;"
b11 %#
1!
#70000
0!
#75000
b1 <
b1 ?
b1 D
b1 Z"
b11 K"
b110 ]
b110 C"
b110 \"
b11 +
b11 H
b11 7#
b11 Q
b11 A"
b11 ]"
b11100 l"
b11100 s"
b11100 t"
b11 [
b11 ="
b11 U"
b11 (#
b100 \
b100 ;"
b100 %#
b0 s
b0 ""
b0 %"
b0 a"
b101 -
b101 G
b101 6#
b101 ^
b101 8"
b101 c"
b100 R
b100 e"
b100011110001100110011 4
b100011110001100110011 =
b100011110001100110011 E
b100011110001100110011 j
b100011110001100110011 F"
b100011110001100110011 H"
b100011110001100110011 y"
b10100 _
b10100 D"
b10100 i"
b10100 r"
b10100 a
b10100 E"
b10100 z"
b11000000010001000100011 i
b11000000010001000100011 m"
b11000000010001000100011 n"
b11000000010001000100011 w"
b11100 j"
b11100 q"
b11000 `
b11000 h"
b11000 x"
b11000 k"
b11000 o"
b11000 u"
1!
#80000
0!
#85000
1:
1B
10
b10 <
b10 ?
b10 D
b10 Z"
11
0,
b0 ;
b0 >
b0 C
b100 k
b100 <"
b100 ["
b100 G"
b100 I"
b100000 l"
b100000 s"
b100000 t"
b110 L"
b0 K"
b100 ]
b100 C"
b100 \"
b110 *
b110 I
b110 8#
b110 M
b110 ?"
b110 _"
b0 +
b0 H
b0 7#
b0 Q
b0 A"
b0 ]"
b100011 @
b100 J"
b10000000010001110000011 i
b10000000010001110000011 m"
b10000000010001110000011 n"
b10000000010001110000011 w"
b100000 j"
b100000 q"
b11100 `
b11100 h"
b11100 x"
b11100 k"
b11100 o"
b11100 u"
b11000000010001000100011 4
b11000000010001000100011 =
b11000000010001000100011 E
b11000000010001000100011 j
b11000000010001000100011 F"
b11000000010001000100011 H"
b11000000010001000100011 y"
b11100 _
b11100 D"
b11100 i"
b11100 r"
b11000 a
b11000 E"
b11000 z"
b1 s
b1 ""
b1 %"
b1 a"
b110 -
b110 G
b110 6#
b110 ^
b110 8"
b110 c"
b11 R
b11 e"
b101 \
b101 ;"
b101 %#
b100 [
b100 ="
b100 U"
b100 (#
1!
#90000
0!
#95000
0B
1,
00
13
b100 L"
b111 ]
b111 C"
b111 \"
b100 *
b100 I
b100 8#
b100 M
b100 ?"
b100 _"
b11 @
b100100 l"
b100100 s"
b100100 t"
b101 [
b101 ="
b101 U"
b101 (#
b110 \
b110 ;"
b110 %#
0X
1f
1c
b10 s
b10 ""
b10 %"
b10 a"
1r
b100 -
b100 G
b100 6#
b100 ^
b100 8"
b100 c"
b110 N
b110 g"
b0 R
b0 e"
b100 l
b100 {
b100 /"
b100 b"
b10000000010001110000011 4
b10000000010001110000011 =
b10000000010001110000011 E
b10000000010001110000011 j
b10000000010001110000011 F"
b10000000010001110000011 H"
b10000000010001110000011 y"
b100000 _
b100000 D"
b100000 i"
b100000 r"
b11100 a
b11100 E"
b11100 z"
b1000000000100111000010000110011 i
b1000000000100111000010000110011 m"
b1000000000100111000010000110011 n"
b1000000000100111000010000110011 w"
b100100 j"
b100100 q"
b100000 `
b100000 h"
b100000 x"
b100000 k"
b100000 o"
b100000 u"
1!
#100000
0!
#105000
b110 <
b110 ?
b110 D
b110 Z"
0B
0:
00
01
03
1)
05
0.
b10 ;
b10 >
b10 C
b0 k
b0 <"
b0 ["
b0 G"
b0 I"
b101000 l"
b101000 s"
b101000 t"
b1 L"
b111 K"
b1000 ]
b1000 C"
b1000 \"
b1 *
b1 I
b1 8#
b1 M
b1 ?"
b1 _"
b111 +
b111 H
b111 7#
b111 Q
b111 A"
b111 ]"
b110011 @
b0 J"
b1001000110010010110011 i
b1001000110010010110011 m"
b1001000110010010110011 n"
b1001000110010010110011 w"
b101000 j"
b101000 q"
b100100 `
b100100 h"
b100100 x"
b100100 k"
b100100 o"
b100100 u"
b1000000000100111000010000110011 4
b1000000000100111000010000110011 =
b1000000000100111000010000110011 E
b1000000000100111000010000110011 j
b1000000000100111000010000110011 F"
b1000000000100111000010000110011 H"
b1000000000100111000010000110011 y"
b100000 _
b100000 D"
b100000 i"
b100000 r"
b100000 a
b100000 E"
b100000 z"
1X
0c
12
1h
b111 -
b111 G
b111 6#
b111 ^
b111 8"
b111 c"
b100 N
b100 g"
0W
1e
1b
b100 \
b100 ;"
b100 %#
b110 [
b110 ="
b110 U"
b110 (#
1!
#110000
0!
#115000
0)
15
1.
0V
1d
b100 [
b100 ="
b100 U"
b100 (#
1W
0b
1g
b111 \
b111 ;"
b111 %#
0f
02
0h
b110 s
b110 ""
b110 %"
b110 a"
0r
b1000 -
b1000 G
b1000 6#
b1000 ^
b1000 8"
b1000 c"
b1 N
b1 g"
b111 R
b111 e"
b0 l
b0 {
b0 /"
b0 b"
1!
#120000
0!
#125000
b1 <
b1 ?
b1 D
b1 Z"
b101100 l"
b101100 s"
b101100 t"
b10 L"
b1000 K"
b1001 ]
b1001 C"
b1001 \"
b10 *
b10 I
b10 8#
b10 M
b10 ?"
b10 _"
b1000 +
b1000 H
b1000 7#
b1000 Q
b1000 A"
b1000 ]"
b100100000010010000100011 i
b100100000010010000100011 m"
b100100000010010000100011 n"
b100100000010010000100011 w"
b101100 j"
b101100 q"
b101000 `
b101000 h"
b101000 x"
b101000 k"
b101000 o"
b101000 u"
b1001000110010010110011 4
b1001000110010010110011 =
b1001000110010010110011 E
b1001000110010010110011 j
b1001000110010010110011 F"
b1001000110010010110011 H"
b1001000110010010110011 y"
b100100 _
b100100 D"
b100100 i"
b100100 r"
b100100 a
b100100 E"
b100100 z"
0e
0g
b1000 \
b1000 ;"
b1000 %#
1V
b111 [
b111 ="
b111 U"
b111 (#
1!
#130000
0!
#135000
1:
1B
10
b10 <
b10 ?
b10 D
b10 Z"
11
0,
b0 ;
b0 >
b0 C
b1000 k
b1000 <"
b1000 ["
b1000 G"
b1000 I"
b1001 L"
b0 K"
b1000 ]
b1000 C"
b1000 \"
b1001 *
b1001 I
b1001 8#
b1001 M
b1001 ?"
b1001 _"
b0 +
b0 H
b0 7#
b0 Q
b0 A"
b0 ]"
b100011 @
b1000 J"
b110000 l"
b110000 s"
b110000 t"
0d
b1000 [
b1000 ="
b1000 U"
b1000 (#
b1 s
b1 ""
b1 %"
b1 a"
b1001 -
b1001 G
b1001 6#
b1001 ^
b1001 8"
b1001 c"
b10 N
b10 g"
b1000 R
b1000 e"
b100100000010010000100011 4
b100100000010010000100011 =
b100100000010010000100011 E
b100100000010010000100011 j
b100100000010010000100011 F"
b100100000010010000100011 H"
b100100000010010000100011 y"
b110000 _
b110000 D"
b110000 i"
b110000 r"
b101000 a
b101000 E"
b101000 z"
b100000000010010100000011 i
b100000000010010100000011 m"
b100000000010010100000011 n"
b100000000010010100000011 w"
b110000 j"
b110000 q"
b101100 `
b101100 h"
b101100 x"
b101100 k"
b101100 o"
b101100 u"
1!
#140000
0!
#145000
0B
1,
00
13
b110100 l"
b110100 s"
b110100 t"
b1000 L"
b1010 ]
b1010 C"
b1010 \"
b1000 *
b1000 I
b1000 8#
b1000 M
b1000 ?"
b1000 _"
b11 @
b100101010000101001100011 i
b100101010000101001100011 m"
b100101010000101001100011 n"
b100101010000101001100011 w"
b110100 j"
b110100 q"
b110000 `
b110000 h"
b110000 x"
b110000 k"
b110000 o"
b110000 u"
b100000000010010100000011 4
b100000000010010100000011 =
b100000000010010100000011 E
b100000000010010100000011 j
b100000000010010100000011 F"
b100000000010010100000011 H"
b100000000010010100000011 y"
b110100 _
b110100 D"
b110100 i"
b110100 r"
b101100 a
b101100 E"
b101100 z"
0X
1f
1c
b10 s
b10 ""
b10 %"
b10 a"
1r
b1000 -
b1000 G
b1000 6#
b1000 ^
b1000 8"
b1000 c"
b1001 N
b1001 g"
b0 R
b0 e"
b1000 l
b1000 {
b1000 /"
b1000 b"
b1001 \
b1001 ;"
b1001 %#
1!
#150000
0!
#155000
b110 <
b110 ?
b110 D
b110 Z"
0:
0,
18
b1 ;
b1 >
b1 C
1A
03
b0 k
b0 <"
b0 ["
b0 G"
b0 I"
1)
05
0.
b1001 L"
b1010 K"
b10100 ]
b10100 C"
b10100 \"
b1001 *
b1001 I
b1001 8#
b1001 M
b1001 ?"
b1001 _"
b1010 +
b1010 H
b1010 7#
b1010 Q
b1010 A"
b1010 ]"
b1100011 @
b0 J"
b111000 l"
b111000 s"
b111000 t"
b1001 [
b1001 ="
b1001 U"
b1001 (#
0W
1e
1b
b1000 \
b1000 ;"
b1000 %#
1X
0c
12
1h
b1010 -
b1010 G
b1010 6#
b1010 ^
b1010 8"
b1010 c"
b1000 N
b1000 g"
b100101010000101001100011 4
b100101010000101001100011 =
b100101010000101001100011 E
b100101010000101001100011 j
b100101010000101001100011 F"
b100101010000101001100011 H"
b100101010000101001100011 y"
b110000 _
b110000 D"
b110000 i"
b110000 r"
b110000 a
b110000 E"
b110000 z"
b100101010000110001100011 i
b100101010000110001100011 m"
b100101010000110001100011 n"
b100101010000110001100011 w"
b111000 j"
b111000 q"
b110100 `
b110100 h"
b110100 x"
b110100 k"
b110100 o"
b110100 u"
1!
#160000
0!
#165000
0)
15
1.
0X
02
0h
b110 s
b110 ""
b110 %"
b110 a"
0r
b10100 -
b10100 G
b10100 6#
b10100 ^
b10100 8"
b10100 c"
b1001 N
b1001 g"
b1010 R
b1010 e"
b0 l
b0 {
b0 /"
b0 b"
1W
0b
1g
b1010 \
b1010 ;"
b1010 %#
0V
1d
b1000 [
b1000 ="
b1000 U"
b1000 (#
1!
#170000
0!
#175000
b11000 ]
b11000 C"
b11000 \"
b111100 l"
b111100 s"
b111100 t"
1V
b1010 [
b1010 ="
b1010 U"
b1010 (#
0W
0g
b10100 \
b10100 ;"
b10100 %#
b100101010000110001100011 4
b100101010000110001100011 =
b100101010000110001100011 E
b100101010000110001100011 j
b100101010000110001100011 F"
b100101010000110001100011 H"
b100101010000110001100011 y"
b110100 _
b110100 D"
b110100 i"
b110100 r"
b110100 a
b110100 E"
b110100 z"
b0 i
b0 m"
b0 n"
b0 w"
b111100 j"
b111100 q"
b111000 `
b111000 h"
b111000 x"
b111000 k"
b111000 o"
b111000 u"
1!
#180000
0!
#185000
b10 <
b10 ?
b10 D
b10 Z"
1:
1,
0)
09
08
b0 ;
b0 >
b0 C
0A
13
0/
0F
b1000000 l"
b1000000 s"
b1000000 t"
b0 L"
b0 K"
1U
b0 ]
b0 C"
b0 \"
b0 *
b0 I
b0 8#
b0 M
b0 ?"
b0 _"
b0 +
b0 H
b0 7#
b0 Q
b0 A"
b0 ]"
b0 @
b1000000 j"
b1000000 q"
b111100 `
b111100 h"
b111100 x"
b111100 k"
b111100 o"
b111100 u"
b0 4
b0 =
b0 E
b0 j
b0 F"
b0 H"
b0 y"
b111000 _
b111000 D"
b111000 i"
b111000 r"
b111000 a
b111000 E"
b111000 z"
b11000 -
b11000 G
b11000 6#
b11000 ^
b11000 8"
b11000 c"
0V
b10100 [
b10100 ="
b10100 U"
b10100 (#
1!
#190000
0!
#195000
b1000100 l"
b1000100 s"
b1000100 t"
b11000 \
b11000 ;"
b11000 %#
1X
12
1h
b10 s
b10 ""
b10 %"
b10 a"
1r
b0 -
b0 G
b0 6#
b0 ^
b0 8"
b0 c"
b0 N
b0 g"
b0 R
b0 e"
b111100 _
b111100 D"
b111100 i"
b111100 r"
b111100 a
b111100 E"
b111100 z"
b1000100 j"
b1000100 q"
b1000000 `
b1000000 h"
b1000000 x"
b1000000 k"
b1000000 o"
b1000000 u"
1!
#200000
0!
#205000
b1001000 l"
b1001000 s"
b1001000 t"
b1001000 j"
b1001000 q"
b1000100 `
b1000100 h"
b1000100 x"
b1000100 k"
b1000100 o"
b1000100 u"
b1000000 _
b1000000 D"
b1000000 i"
b1000000 r"
b1000000 a
b1000000 E"
b1000000 z"
1W
1g
b0 \
b0 ;"
b0 %#
b11000 [
b11000 ="
b11000 U"
b11000 (#
1!
#210000
0!
